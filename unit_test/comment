
// #include <stdlib.h>
// #include <stdio.h>
//
// int main(int argc, char **argv)
// {
// 	printf("%ld\n", ft_power( atoi(argv[1]), atoi(argv[2])));
// }


// #include <stdio.h>
// #include <stdlib.h>
// int main(int argc, char **argv)
// {
//
// 	printf("%d %d\n", ft_strnlen(argv[1], atoi(argv[2])), atoi(argv[2]));
// 	return 0;
// }


// #include <stdio.h>
//
// int main(int argc, char  **argv)
// {
// 	if (argc == 4)
// 	{
// 		printf("%s\n", ft_strreplace(argv[1], argv[2][0], argv[3][0]));
// 		printf("%ld\n", argv[1] - (char *)NULL );
// 		printf("%ld\n", (char *)NULL - argv[1]);
// 	}
// 	return 0;
// }



// int	ft_strlen(char *str)
// {
// 	return (*str ? ft_strlen(++str) + 1 : 0);
// }

// #include <stdio.h>
//
// int main(int argc, char  **argv) {
//
// 	if (argc == 2)
// 		printf("%d\n", ft_strlen(argv[1]));
// 	return 0;
// }



atoi

// int		ft_atoi(const char *str)
// {
// 	long long res;
// 	int neg;
//
// 	res = 0;
// 	neg = 0;
// 	while (ft_isspace(*str))
// 		str++;
// 	if (*str == '+' || *str == '-')
// 	{
// 		if (*str == '-')
// 			neg = 1;
// 		str++;
// 	}
// 	while (ft_isdigit(*str))
// 		res = res * 10 + *str++ - '0';
// 	return (neg ? -res : res);
// }
//
// #include "stdio.h"
//
// int main(int argc, char **argv) {
// 	printf("%d\n", atoi(argv[1]));
// 	printf("%d\n", ft_atoi(argv[1]));
// 	return (0);
// }

bzero


// #include <stdio.h>
// #include <stdlib.h>
// int main()
// {
// 	int i = 15;
// 	char *lol = malloc(i);
// 	while (i)
// 		lol[--i] = 'X';
// 	ft_bzero(lol, 14);
// 	printf("%s\n", lol);
// 	while (i < 20)
// 		printf("%c", lol[i++]);
// 	printf("\n");
// }

memalloc

// #include <stdio.h>
// int main()
// {
// 	int i = 6;
//
// 	char *a = (char*)ft_memalloc(i);
// 	while (i--)
// 		printf("%d\n", a[i]==0);
// }


// #include <stdio.h>
// #include <stdlib.h>
// int main(int argc, char **argv)
// {
// 	if (argc == 5)
// 	{
// 		char *a = memccpy(argv[1], argv[2], atoi(argv[3]), atoi(argv[4]));
// 		printf("%s gold1\n", a);
//
// 		char *b = ft_memccpy(argv[1], argv[2], atoi(argv[3]), atoi(argv[4]));
// 		printf("%s test1\n", b);
// 	}
// 	else
// 		printf("Lol les arguments!!\n");
// 	return 0;
// }


// #include <stdio.h>
// #include <stdlib.h>
// int main(int argc, char **argv)
// {
// 	if (argc == 5)
// 	{
// 		printf("%s\n", memchr(argv[1], atoi(argv[3]), atoi(argv[4])));
// 		printf("%s\n", ft_memchr(argv[2], atoi(argv[3]), atoi(argv[4])));
// 	}
// 	else
// 		printf("LOL les arguements\n");
// 	return 0;
// }



// #include <stdio.h>
//
// int main(int argc, char const *argv[])
// {
// 	if (argc == 4)
// 	{
// 		printf("%d\n", ft_memcmp(NULL, argv[2], atoi(argv[3])));
// 		printf("%d\n", memcmp(argv[1], argv[2], atoi(argv[3])));
// 	}
// 	else
// 	printf("LOL les arguments\n");
// 	return 0;
// }



// #include <stdio.h>
// #include <stdlib.h>
// int main(int argc, char **argv)
// {
// 	if (argc == 4)
// 	{
// 		char *a = memcpy(argv[1] ,argv[2] , atoi(argv[3]));
// 		char *b = ft_memcpy(argv[1] ,argv[2] , atoi(argv[3]));
// 		printf("%s\n", a);
// 		printf("%s\n", b);
// 	}
// 	else
// 	printf("lol les arguments\n" );
// }


// #include <stdio.h>
// #include <stdlib.h>
// int main()
// {
// 	char *lol = malloc(15);
// 	char *lol2 = malloc(15);
// 	memset(lol2, 65, 6);
// 	ft_memset(lol, 65, 6);
//
// 	printf("%s\n", lol);
// 	printf("%s\n", lol2);
// }


// #include <stdio.h>
// #include <stdlib.h>
// int main(int argc, char **argv)
// {
// 	if (argc == 4)
// 	{
// 		printf("%s test\n", ft_memmove(argv[1]+4, argv[1]+8, atoi(argv[3])));
// 		printf("%s gold\n", memmove(argv[2]+4, argv[2]+8, atoi(argv[3])));
// 	}
// 	else
// 		printf("Lol les arguments!!\n");
// 	return 0;
// }
